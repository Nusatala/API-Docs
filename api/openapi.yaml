openapi: 3.0.3
info:
  title: Swagger Nusatala - OpenAPI 3.0
  description: |-
    This is a Nusatala API Documentation based on the OpenAPI 3.0 specification. You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the nusatala, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Nusatala, then click [here](https://editor.swagger.io/?url=https://nusatala.vercel.app/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Nusatala OAS 2.0` menu option!_

    Some useful links:
    - [The Nusatala repository](https://github.com/oxychan/Team-Nusatala)
    - [The source API definition for the Nusatala](https://github.com/oxychan/Team-Nusatala/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://nusatala.vercel.app/docs
tags:
  - name: user
    description: Operations about user
paths:
  /users/register:
    post:
      tags:
        - user
      summary: Register user into system/database
      description: ""
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/users_register_body"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "400":
          description: Invalid username/password supplied
        "422":
          description: Username or email was taken
      x-swagger-router-controller: User
  /users/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Invalid username/password supplied
      x-swagger-router-controller: User
  /users/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  /users/{id}:
    get:
      tags:
        - user
      summary: Get user by id
      description: ""
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: "The name that needs to be fetched. Use user1 for testing. "
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "400":
          description: Invalid id supplied
        "403":
          description: Access id that is not same as the user current id
      x-swagger-router-controller: User
    put:
      tags:
        - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: id that need to be deleted
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Update an existent user in the Nusatala App
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Users"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Users"
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: The id that needs to be deleted
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid id supplied
        "403":
          description: You dont have permission to delete that id
      x-swagger-router-controller: User
  /users/change-password:
    post:
      tags:
        - user
      summary: Change user's password on the system/database
      description: Change user's password on the system/database
      operationId: changeUserPassword
      requestBody:
        description: Changed user password
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/users_changepassword_body"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Users"
      responses:
        "200":
          description: Your password successfuly changed
        "400":
          description: Invalid username/password supplied
        "422":
          description: Username or email was taken
      x-swagger-router-controller: User
  /articles:
    get:
      tags:
        - articles
      summary: Get all articles
      description: This can only be done by the logged in user.
      operationId: getAllArticles
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Articles"
      x-swagger-router-controller: Articles
    post:
      tags:
        - articles
      summary: Create article
      description: create new article
      operationId: postArticles
      requestBody:
        $ref: "#/components/requestBodies/Articles"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Articles"
        "400":
          description: Invalid username/password supplied
      x-swagger-router-controller: Articles
  /articles/new:
    get:
      tags:
        - articles
      summary: Get latest articles
      description: get latest articles
      operationId: getLatestArticles
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Articles"
      x-swagger-router-controller: Articles
  /articles/popularity:
    get:
      tags:
        - articles
      summary: Get popular articles
      description: get popular articles
      operationId: getPopularArticles
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Articles"
      x-swagger-router-controller: Articles
  /articles/label/{label_id}:
    get:
      tags:
        - articles
      summary: Get articles by label id
      description: get latest articles
      operationId: getLatestArticles
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Articles"
      x-swagger-router-controller: Articles
  /articles/{id}:
    get:
      tags:
        - articles
      summary: get article data using id
      description: get specific article data using id
      operationId: getArticle
      parameters:
        - name: id
          in: path
          description: article id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Articles"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/Articles"
        "400":
          description: Invalid id supplied
      x-swagger-router-controller: Articles
    put:
      tags:
        - articles
      summary: update the article data
      description: update the specific article data using id
      operationId: putArticle
      parameters:
        - name: id
          in: path
          description: id of the article to be updated
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Articles"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Articles"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/Articles"
      x-swagger-router-controller: Articles
    delete:
      tags:
        - articles
      summary: delete the article data
      description: delete specific article data using id
      operationId: deleteArticle
      parameters:
        - name: id
          in: path
          description: id of the article to be deleted
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
      x-swagger-router-controller: Articles
  /quizzes/{level}:
    get:
      tags:
        - quizzes
      summary: Get all quizzes
      description: ""
      operationId: getQuizzes
      parameters:
        - name: level
          in: path
          description: Quiz level for filltering the level of quizzes
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quizzes"
        "403":
          description: You cant access all the quizzes without login
      x-swagger-router-controller: Quizzes
    post:
      tags:
        - quizzes
      summary: Create quiz
      description: This can only be done by the logged in admin.
      operationId: createQuiz
      parameters:
        - name: level
          in: path
          description: Quiz level for filltering the level of quizzes
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Created quizzes object
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/quizzes_level_body"
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quizzes"
      x-swagger-router-controller: Quizzes
  /quizzes/{level}/questions:
    post:
      tags:
        - question
      summary: Create new question
      description: This can only be done by the logged in admin.
      operationId: createQuestion
      parameters:
        - name: level
          in: path
          description: Quiz level for filltering the level of quizzes
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Update an existent user in the Nusatala App
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quiz_questions"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Quiz_questions"
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quiz_questions"
      x-swagger-router-controller: Question
  /quizzes/{level}/questions/{id}:
    get:
      tags:
        - questions
      summary: Get question by id
      description: ""
      operationId: getQuestion
      parameters:
        - name: level
          in: path
          description: Quiz level for filltering the level of quizzes
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: id
          in: path
          description: id of the question
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quiz_questions"
        "400":
          description: Invalid question id supplied
      x-swagger-router-controller: Questions
    put:
      tags:
        - question
      summary: Update question
      description: This can only be done by the logged in admin.
      operationId: updateQuestion
      parameters:
        - name: level
          in: path
          description: Quiz level for filltering the level of quizzes
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: id
          in: path
          description: id of the question
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        description: Update an existent user in the Nusatala App
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quiz_questions"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Quiz_questions"
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quiz_questions"
      x-swagger-router-controller: Question
    delete:
      tags:
        - questions
      summary: Delete questions
      description: This can only be done by the logged in admin.
      operationId: deleteQuestions
      parameters:
        - name: level
          in: path
          description: Quiz level for filltering the level of quizzes
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: id
          in: path
          description: id of the question
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: question with id 2 has been deleted
        "400":
          description: Invalid id supplied
        "403":
          description: You dont have permission to delete that id
      x-swagger-router-controller: Questions
  /faq:
    get:
      tags:
        - faq
      summary: Get faq
      description: Get all frequently asked question
      operationId: getAllFaq
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FAQ"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/FAQ"
        "400":
          description: Invalid id supplied
        "403":
          description: Access id that is not same as the user current id
      x-swagger-router-controller: Faq
    post:
      tags:
        - faq
      summary: Create FAQ
      description: Create frequently asked question
      operationId: createFAQ
      requestBody:
        $ref: "#/components/requestBodies/FAQ"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FAQ"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/FAQ"
        "400":
          description: there is invalid value supplied
      x-swagger-router-controller: Faq
  /faq/{id}:
    get:
      tags:
        - faq
      summary: Get faq by id
      description: Get specific frequently asked question by id
      operationId: faqIdGET
      parameters:
        - name: id
          in: path
          description: The faq's id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FAQ"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/FAQ"
        "400":
          description: Invalid id supplied
      x-swagger-router-controller: Faq
    put:
      tags:
        - faq
      summary: Update faq
      description: Update frequently asked question by id
      operationId: updateFaq
      parameters:
        - name: id
          in: path
          description: The faq's id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/FAQ"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FAQ"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/FAQ"
      x-swagger-router-controller: Faq
    delete:
      tags:
        - faq
      summary: Delete faq
      description: Delete spesific frequently asked question by id
      operationId: deleteFaq
      parameters:
        - name: id
          in: path
          description: The faq's id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid id supplied
        "403":
          description: You dont have permission to delete that id
      x-swagger-router-controller: Faq
  /testimonials:
    get:
      tags:
        - testimonials
      summary: Get testimonials
      description: Get all testimonials
      operationId: getAllTestimonials
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Testimonials"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/Testimonials"
        "400":
          description: Invalid id supplied
        "403":
          description: Access id that is not same as the user current id
      x-swagger-router-controller: Testimonials
    post:
      tags:
        - testimonials
      summary: Create testimonials
      description: Create testimonials
      operationId: createTestimonials
      requestBody:
        $ref: "#/components/requestBodies/Testimonials"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Testimonials"
        "400":
          description: there is invalid value supplied
      x-swagger-router-controller: Testimonials
  /testimonials/{id}:
    get:
      tags:
        - testimonials
      summary: Get testimonial's by id
      description: Get specific testimonial by id
      operationId: testimonialsIdGET
      parameters:
        - name: id
          in: path
          description: The testimonial's id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Testimonials"
        "400":
          description: Invalid id supplied
      x-swagger-router-controller: Testimonials
    put:
      tags:
        - testimonials
      summary: Update testimonial
      description: Update specific testimonial by id
      operationId: updateTestimonial
      parameters:
        - name: id
          in: path
          description: The testimonial's id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Testimonials"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Testimonials"
      x-swagger-router-controller: Testimonials
    delete:
      tags:
        - testimonials
      summary: Delete testimonial
      description: Delete spesific testimonial by id
      operationId: deleteTestimonial
      parameters:
        - name: id
          in: path
          description: The testimonial's id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid id supplied
        "403":
          description: You dont have permission to delete that id
      x-swagger-router-controller: Testimonials
  /tutorials:
    get:
      tags:
        - tutorials
      summary: Get all tutorials
      description: Get all tutorials
      operationId: tutorialsGET
      responses:
        "200":
          description: successful operation
      x-swagger-router-controller: Tutorials
    post:
      tags:
        - tutorials
      summary: Create a tutorial
      description: Create a tutorial
      operationId: tutorialsPOST
      requestBody:
        $ref: "#/components/requestBodies/Tutorials"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tutorials"
      x-swagger-router-controller: Tutorials
  /tutorials/label/{id}:
    get:
      tags:
        - tutorials
      summary: Get tutorial by label id
      description: Get specific tutorial using label id
      operationId: getTutorialByLael
      parameters:
        - name: id
          in: path
          description: id for get specific tutorial
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tutorials"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/Tutorials"
        "400":
          description: Invalid id supplied
      x-swagger-router-controller: Tutorials
  /tutorials/{id}:
    get:
      tags:
        - tutorials
      summary: Get a tutorial
      description: Get specific tutorial using id
      operationId: getTutorial
      parameters:
        - name: id
          in: path
          description: id for get specific tutorial
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tutorials"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/Tutorials"
        "400":
          description: Invalid id supplied
      x-swagger-router-controller: Tutorials
    put:
      tags:
        - tutorials
      summary: Update tutorial
      description: Update spesific tutorial using id
      operationId: updateTutorial
      parameters:
        - name: id
          in: path
          description: id for tutorial that need to be updated
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        description: Update an existent tutorial data in the Nusatala App
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestTutorials"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RequestTutorials"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tutorials"
      x-swagger-router-controller: Tutorials
    delete:
      tags:
        - tutorials
      summary: Delete the tutorial data
      description: Delete specific tutorial data using id
      operationId: deleteTutorial
      parameters:
        - name: id
          in: path
          description: id of the tutorial to be deleted
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
      x-swagger-router-controller: Tutorials
  /images:
    get:
      tags:
        - images
      summary: Get images
      description: Get all images
      operationId: getAllImages
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Images"
      x-swagger-router-controller: Images
    post:
      tags:
        - images
      summary: Create images
      description: Create images
      operationId: createImage
      requestBody:
        $ref: "#/components/requestBodies/Images"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Images"
        "400":
          description: there is invalid value supplied
      x-swagger-router-controller: Images
  /images/{label}/2-images:
    get:
      tags:
        - images
      summary: Get images
      description: Get two images using label
      operationId: getImagesLimit
      parameters:
        - name: label
          in: path
          description: Label untuk memfilter gambar
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImagesArray"
              example:
                - id: 1
                  user_id: 2
                  label: Angklung
                  image: angklung.png
                  created_at: 2023-05-13T15:30:00Z
                  updated_at: 2023-05-13T16:30:00Z
                - id: 2
                  user_id: 2
                  label: Angklung
                  image: angklung1.png
                  created_at: 2023-05-13T15:30:00Z
                  updated_at: 2023-05-13T16:30:00Z
        "400":
          description: Invalid request
      x-swagger-router-controller: Images
  /images/scan:
    post:
      tags:
        - images
      summary: Scan image
      description: Scan image
      operationId: scanImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  example: "D:/Data/bonang.png"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  label_id:
                    type: integer
                    example: 1
        "400":
          description: there is invalid value supplied
      x-swagger-router-controller: Images
  /images/{id}:
    get:
      tags:
        - images
      summary: Get image data using id
      description: Get specific image data using id
      operationId: getImage
      parameters:
        - name: id
          in: path
          description: image id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Images"
        "400":
          description: Invalid id supplied
      x-swagger-router-controller: Images
    put:
      tags:
        - images
      summary: Update the image data
      description: Update the specific image data using id
      operationId: putImage
      parameters:
        - name: id
          in: path
          description: id of the image to be updated
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        description: Update an existent image data in the Nusatala App
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestImages"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RequestImages"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Images"
      x-swagger-router-controller: Images
    delete:
      tags:
        - images
      summary: delete the image data
      description: Delete specific image data using id
      operationId: deleteImage
      parameters:
        - name: id
          in: path
          description: id of the image to be deleted
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
      x-swagger-router-controller: Images
  /products:
    get:
      tags:
        - products
      summary: Get all products
      description: Get all product
      operationId: getAllProducts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
      x-swagger-router-controller: Products
    post:
      tags:
        - products
      summary: Create products
      description: Create new a product
      operationId: postProduct
      requestBody:
        $ref: "#/components/requestBodies/Products"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        "400":
          description: Incorrect data entered
      x-swagger-router-controller: Products
  /products/label/{id}:
    get:
      tags:
        - products
      summary: Get product using label id
      description: Get specific product using label id
      operationId: getProductLabel
      parameters:
        - name: id
          in: path
          description: product id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        "400":
          description: Invalid id supplied
      x-swagger-router-controller: Products
  /products/{id}:
    get:
      tags:
        - products
      summary: Get product data using id
      description: Get specific product data using id
      operationId: getProduct
      parameters:
        - name: id
          in: path
          description: product id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        "400":
          description: Invalid id supplied
      x-swagger-router-controller: Products
    put:
      tags:
        - products
      summary: Update the product data
      description: Update the specific product data using id
      operationId: putProduct
      parameters:
        - name: id
          in: path
          description: id of the product to be updated
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Products"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
      x-swagger-router-controller: Products
    delete:
      tags:
        - products
      summary: Delete the product data
      description: Delete specific product data using id
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: id of the product to be deleted
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
      x-swagger-router-controller: Products
  /healthCheck:
    get:
      tags:
        - healthCheck
      summary: Get health status
      description: Get health status
      operationId: getHealthStatus
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/healthCheck"
      x-swagger-router-controller: healthCheck
  /nearby-search?latitude=-latitude&longitude=longtitude:
    get:
      tags:
        - nearby-search
      summary: Get nearby location of art community
      description: Get nearby location of art community
      operationId: getNearbySearch
      parameters:
        - in: query
          name: latitude
          schema:
            type: string
          description: latitude form user location
        - in: query
          name: longtitude
          schema:
            type: string
          description: longtitude form user location
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/nearbySearch"
      x-swagger-router-controller: nearbySearch
components:
  schemas:
    Users:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        google_id:
          type: string
        google_secret:
          type: string
        username:
          type: string
          example: theUser
        name:
          type: string
          example: John
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: "12345"
        role:
          type: boolean
          example: false
        photo:
          type: string
          example: gamelan.png
        created_at:
          type: string
          format: date
          example: 0014-11-13
        updated_at:
          type: string
          format: date
          example: 0014-11-13
    Articles:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        user_id:
          type: integer
          example: 1
        image_id:
          type: integer
          example: 1
        tutorial_id:
          type: integer
          example: 1
        title:
          type: string
          example: Jenis Jenis Gamelan
        asal_daerah:
          type: string
          example: sanggar-seni-gamelan.png
        history:
          type: string
          example: lorem ipsum dolor...
        bahan_pembuatan:
          type: string
          example: logam perunggu
        sources:
          type: string
          example: logam perunggu
        views:
          type: integer
          example: 123
        created_at:
          type: string
          format: date
          example: 0014-11-13
        updated_at:
          type: string
          format: date
          example: 0014-12-14
    RequestArticles:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        user_id:
          type: integer
          example: 1
        image_id:
          type: integer
          example: 1
        tutorial_id:
          type: integer
          example: 1
        title:
          type: string
          example: Jenis Jenis Gamelan
        asal_daerah:
          type: string
          example: sanggar-seni-gamelan.png
        history:
          type: string
          example: lorem ipsum dolor...
        bahan_pembuatan:
          type: string
          example: logam perunggu
        sources:
          type: string
          example: logam perunggu
        views:
          type: integer
          example: 123
    Quizzes:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        user_id:
          type: integer
          example: 1
        thumbnail:
          type: string
          example: quiz1.png
        total_questions:
          type: integer
          example: 10
        level:
          type: string
          example: easy
        created_at:
          type: string
          format: date
          example: 2023-05-31 03:00:15
        updated_at:
          type: string
          format: date
          example: 2023-05-31 03:00:15
    Quiz_questions:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        quiz_id:
          type: integer
          format: int64
          example: 2
        status:
          type: boolean
          example: true
        question_image:
          type: string
          example: question1.png
        question_text:
          type: string
          example: Gamelan Reog Ponorogo berasal dari kota mana?
        option1:
          type: string
          example: Malang
        option2:
          type: string
          example: Solo
        option3:
          type: string
          example: Ponorogo
        option4:
          type: string
          example: Surabaya
        real_answer:
          type: string
          example: Ponorogo
        created_at:
          type: string
          format: date
          example: 2023-05-31 03:00:15
        updated_at:
          type: string
          format: date
          example: 2023-05-31 03:00:15
    FAQ:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        question:
          type: string
          example: Gamelan apa yang berasal dari Jawa Timur?
        answer:
          type: string
          example: Gamelan Reog Ponorogo
        created_at:
          type: string
          format: date-time
          example: 2023-05-31 03:00:15
        updated_at:
          type: string
          format: date-time
          example: 2023-05-31 03:00:15
    RequestFAQ:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        question:
          type: string
          example: Gamelan apa yang berasal dari Jawa Timur?
        answer:
          type: string
          example: Gamelan Reog Ponorogo
    Testimonials:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        name:
          type: string
          example: Iqbal Alfarizi
        photo:
          type: string
          example: pp.png
        testimony:
          type: string
          example: Aplikasi ini sangat membantu saya mempelajari alat musik indonesia
        rating:
          type: integer
          example: 5
        created_at:
          type: string
          format: date-time
          example: 2023-05-13T15:30:00Z
        updated_at:
          type: string
          format: date-time
          example: 2023-05-13T16:30:00Z
    RequestTestimonials:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        name:
          type: string
          example: Iqbal Alfarizi
        photo:
          type: string
          example: pp.png
        testimony:
          type: string
          example: Aplikasi ini sangat membantu saya mempelajari alat musik indonesia
        rating:
          type: integer
          example: 5
    Images:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        label:
          type: string
          example: Angklung
        image:
          type: string
          example: angklung.png
        created_at:
          type: string
          format: date-time
          example: 2023-05-13T15:30:00Z
        updated_at:
          type: string
          format: date-time
          example: 2023-05-13T16:30:00Z
    ImagesArray:
      type: array
      items:
        $ref: "#/components/schemas/Images"
    RequestImages:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        label:
          type: string
          example: Angklung
        image:
          type: string
          example: angklung.png
    healthCheck:
      type: object
      properties:
        message:
          type: string
          example: "This Cloud Run is healthy"
    nearbySearch:
      type: object
      properties:
        business_status:
          type: string
          example: "OPERATIONAL"
    Products:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        label:
          type: string
          example: Angklung
        name:
          type: string
          example: Alat musik Angklung Jawa Barat
        thumbnail:
          type: string
          example: angklung.png
        description:
          type: string
          example:
            "Dimainkan dengan cara digoyangkan, menghasilkan suara indah yang\
            \ khas. Mudah dipelajari dan memberikan pengalaman musik yang menyenangkan."
        price:
          type: integer
          format: int64
          example: 300000
        stock:
          type: integer
          example: 12
        link:
          type: string
          format: url
          example: https://example.com
        rating:
          type: number
          format: float
          example: 4.7
        created_at:
          type: string
          format: date-time
          example: 2023-05-13T15:30:00Z
        updated_at:
          type: string
          format: date-time
          example: 2023-05-13T15:30:00Z
    RequestProducts:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        label:
          type: string
          example: Angklung
        name:
          type: string
          example: Alat musik Angklung Jawa Barat
        thumbnail:
          type: string
          example: angklung.png
        description:
          type: string
          example:
            "Dimainkan dengan cara digoyangkan, menghasilkan suara indah yang\
            \ khas. Mudah dipelajari dan memberikan pengalaman musik yang menyenangkan."
        price:
          type: integer
          format: int64
          example: 300000
        stock:
          type: integer
          example: 12
        link:
          type: string
          format: url
          example: https://example.com
        rating:
          type: number
          format: float
          example: 4.7
    Tutorials:
      type: object
      properties:
        id:
          type: integer
          example: 1
        image_id:
          type: integer
          example: 12
        link:
          type: string
          format: url
          example: https://youtu.be/eil9v7bno7g
        created_at:
          type: string
          format: date-time
          example: 2023-05-13T15:30:00Z
        updated_at:
          type: string
          format: date-time
          example: 2023-05-13T17:30:00Z
    RequestTutorials:
      type: object
      properties:
        id:
          type: integer
          example: 1
        image_id:
          type: integer
          example: 12
        link:
          type: string
          format: url
          example: https://youtu.be/eil9v7bno7g
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    users_register_body:
      properties:
        username:
          type: string
          example: theUser
        name:
          type: string
          example: John
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: "12345"
    users_changepassword_body:
      properties:
        currentPassword:
          type: string
          example: password123
        newPassword:
          type: string
          example: MyPwd123456
    quizzes_level_body:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        user_id:
          type: integer
          example: 1
        thumbnail:
          type: string
          example: quiz1.png
        total_questions:
          type: integer
          example: 10
        level:
          type: string
          example: easy
  requestBodies:
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Users"
    Articles:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/RequestArticles"
        application/json:
          schema:
            $ref: "#/components/schemas/RequestArticles"
    Images:
      description: Create image
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestImages"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/RequestImages"
    Products:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestProducts"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/RequestProducts"
    Tutorials:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestTutorials"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/RequestTutorials"
    Testimonials:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestTestimonials"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/RequestTestimonials"
    FAQ:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestFAQ"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/RequestFAQ"
  securitySchemes:
    nusatala_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://nusatala.vercel.app/oauth/authorize
          scopes:
            write:users: modify users in your account
            read:users: read users data
    api_key:
      type: apiKey
      name: api_key
      in: header
